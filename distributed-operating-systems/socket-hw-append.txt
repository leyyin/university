// instante de client si de server
// clientul trimite un numari
// instante de client si de server
// serverul intoarce daca numarul par sau impar
// clientul trimite un numari
// 0 daca e par si 1 dace impar
// serverul intoarce daca numarul par sau impar
// mai multe instante de client si server
// 0 daca e par si 1 dace impar
// different priority
// mai multe instante de client si server
// send with priority 1
// different priority
// in message we put our processid
// send with priority 1
// server: send back with the processid
// in message we put our processid

// server: send back with the processid
#include "os.h"

#include "math.h"
#include "os.h"

#include "math.h"
#define PATH "/home/dan/dev/os/"


#define PATH "/home/dan/dev/os/"
typedef struct msg

{
typedef struct msg
    long   type;
{
    int    nr;
    long   type;
    pid_t  pid;
    int    nr;
} msg_t;
    pid_t  pid;

} msg_t;
int main()

{
int main()
    int id;
{
    size_t length = sizeof(int) + sizeof(pid_t);
    int id;
    msg_t m;
    size_t length = sizeof(int) + sizeof(pid_t);
    key_t key = safe_ftok(PATH, 1);
    msg_t m;

    key_t key = safe_ftok(PATH, 1);
    if ((id = msgget(key, 0600)) == -1)

    {
    if ((id = msgget(key, 0600)) == -1)
        perror("msgget");
    {
        exit(1);
        perror("msgget");
    }
        exit(1);

    }
    m.type = 1;

    m.pid = getpid();
    m.type = 1;
    printf("Number = "); scanf("%d", &(m.nr));
    m.pid = getpid();

    printf("Number = "); scanf("%d", &(m.nr));
    if (msgsnd(id, &m, length, 0) == -1)

    {
    if (msgsnd(id, &m, length, 0) == -1)
        perror("msgsnd");
    {
        exit(1);
        perror("msgsnd");
    }
        exit(1);
    printf("Client: sent number\n");
    }

    printf("Client: sent number\n");
    if (msgrcv(id, &m, length, getpid(), 0) == -1)

    {
    if (msgrcv(id, &m, length, getpid(), 0) == -1)
        perror("msgrcv");
    {
        exit(1);
        perror("msgrcv");
    }
        exit(1);

    }
    printf("We got with type = %lu and number = %d\n", m.type, m.nr);


    printf("We got with type = %lu and number = %d\n", m.type, m.nr);
    return 0;

}
    return 0;
}
