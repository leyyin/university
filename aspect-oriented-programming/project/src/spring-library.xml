<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd">

    <!-- Enables the caching through annotations -->
    <!--<context:annotation-config />-->
    <!--<cache:annotation-driven mode="aspectj"/>-->
    <aop:aspectj-autoproxy/>

    <!--Set data source https://stackoverflow.com/questions/11324372/how-to-make-spring-inject-value-into-a-static-field-->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="project.controller.DB.setDS"/>
        <property name="arguments">
            <list>
                <ref bean="dataSource"/>
            </list>
        </property>
    </bean>
    <bean id="productRepository" class="project.repository.JDBCProductRepository"/>

    <bean id="salesAgency" class="project.model.SalesAgency">
        <constructor-arg ref="productRepository" />
    </bean>
    <bean id="guiController" class="project.controller.GUIController">
        <constructor-arg ref="salesAgency" />
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.pass}"/>
    </bean>
    <context:property-placeholder location="jdbc.properties"/>

    <!-- cache definitions -->
    <!-- simple cache manager -->
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="searchProducts"/>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="orderedBy"/>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="allProducts"/>
            </set>
        </property>
    </bean>
    <cache:advice id="cacheProductRepository" cache-manager="cacheManager">
        <cache:caching cache="searchProducts">
            <cache:cacheable method="searchByName" key="#name"/>
        </cache:caching>
        <cache:caching cache="orderedBy">
            <cache:cacheable method="getAllOrderedBy" key="#userID"/>
            <cache:cache-evict method="placeOrder" all-entries="true"/>
            <cache:cache-evict method="cancelOrder" all-entries="true"/>
        </cache:caching>
        <cache:caching cache="allProducts">
            <cache:cacheable method="getAll"/>
            <cache:cache-evict method="placeOrder" all-entries="true"/>
            <cache:cache-evict method="cancelOrder" all-entries="true"/>
        </cache:caching>
    </cache:advice>

    <bean id="performanceMonitor" class="project.aspect.PerformanceMonitor"  />
    <aop:config>
        <aop:advisor advice-ref="performanceMonitor"
                     pointcut="project.aspect.PerformanceAspect.performancePointcut())"
                     order="1"/>
        <aop:advisor advice-ref="cacheProductRepository"
                     pointcut="project.aspect.CacheAspect.cachePointcut()"
                     order="2"/>
    </aop:config>

    <!--AUTHENTICATION-->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider>
            <security:jdbc-user-service
                    data-source-ref="dataSource"
                    users-by-username-query="SELECT username, password, enabled FROM users where username=?"
                    authorities-by-username-query="select username, 'ROLE_SUPERVISOR' as authority from  users where username =?"
                    />
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="loginService" class="project.aspect.UILoginService"/>
    <bean id="authenticationSupport" class="ajia.security.AuthenticationSupport">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="loginUI" ref="loginService"/>
    </bean>

    <bean id="authenticationAspect" class="project.aspect.AuthenticationAspect"
          factory-method="aspectOf">
        <property name="authenticationSupport" ref="authenticationSupport"/>
    </bean>
</beans>